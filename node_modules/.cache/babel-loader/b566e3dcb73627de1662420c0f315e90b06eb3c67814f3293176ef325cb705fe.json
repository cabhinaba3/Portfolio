{"ast":null,"code":"var _jsxFileName = \"/Users/cohithereweer/Desktop/portfolio/src/components/sectionloading.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './styles/sectionloading.css'; // Import your custom CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GoogleLoadingScreen = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setLoading(false);\n    }, 500);\n\n    // Clear the timeout if the component is unmounted\n    return () => clearTimeout(timeout);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `google-loading-screen ${loading ? 'loading' : 'loaded'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"google-spinner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), !loading &&\n    /*#__PURE__*/\n    // Render your actual content here after the timeout\n    _jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to My App!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(GoogleLoadingScreen, \"J7PPXooW06IQ11rfabbvgk72KFw=\");\n_c = GoogleLoadingScreen;\nexport default GoogleLoadingScreen;\nvar _c;\n$RefreshReg$(_c, \"GoogleLoadingScreen\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","GoogleLoadingScreen","_s","loading","setLoading","timeout","setTimeout","clearTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/cohithereweer/Desktop/portfolio/src/components/sectionloading.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './styles/sectionloading.css'; // Import your custom CSS file\n\nconst GoogleLoadingScreen = () => {\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setLoading(false);\n    }, 500);\n\n    // Clear the timeout if the component is unmounted\n    return () => clearTimeout(timeout);\n  }, []);\n\n  return (\n    <div className={`google-loading-screen ${loading ? 'loading' : 'loaded'}`}>\n      <div className=\"google-spinner\"></div>\n      {!loading && (\n        // Render your actual content here after the timeout\n        <div className=\"content\">\n          <h1>Welcome to My App!</h1>\n          {/* Add the rest of your content */}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default GoogleLoadingScreen;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,6BAA6B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMO,OAAO,GAAGC,UAAU,CAAC,MAAM;MAC/BF,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,EAAE,GAAG,CAAC;;IAEP;IACA,OAAO,MAAMG,YAAY,CAACF,OAAO,CAAC;EACpC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKQ,SAAS,EAAG,yBAAwBL,OAAO,GAAG,SAAS,GAAG,QAAS,EAAE;IAAAM,QAAA,gBACxET,OAAA;MAAKQ,SAAS,EAAC;IAAgB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EACrC,CAACV,OAAO;IAAA;IACP;IACAH,OAAA;MAAKQ,SAAS,EAAC,SAAS;MAAAC,QAAA,eACtBT,OAAA;QAAAS,QAAA,EAAI;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAExB,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACX,EAAA,CAxBID,mBAAmB;AAAAa,EAAA,GAAnBb,mBAAmB;AA0BzB,eAAeA,mBAAmB;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}