{"ast":null,"code":"var _jsxFileName = \"/Users/cohithereweer/Desktop/portfolio/src/components/LoadingScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './styles/loading'; // Import your custom CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoadingScreen = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setLoading(false);\n    }, 3000);\n\n    // Clear the timeout if the component is unmounted\n    return () => clearTimeout(timeout);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kickass-loading-screen d-flex align-items-center justify-content-center vh-100\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // Render your actual content here after the timeout\n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to My App!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(LoadingScreen, \"J7PPXooW06IQ11rfabbvgk72KFw=\");\n_c = LoadingScreen;\nexport default LoadingScreen;\nvar _c;\n$RefreshReg$(_c, \"LoadingScreen\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","LoadingScreen","_s","loading","setLoading","timeout","setTimeout","clearTimeout","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/cohithereweer/Desktop/portfolio/src/components/LoadingScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './styles/loading'; // Import your custom CSS file\n\nconst LoadingScreen = () => {\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setLoading(false);\n    }, 3000);\n\n    // Clear the timeout if the component is unmounted\n    return () => clearTimeout(timeout);\n  }, []);\n\n  return (\n    <div>\n      {loading ? (\n        <div className=\"kickass-loading-screen d-flex align-items-center justify-content-center vh-100\">\n          <div className=\"custom-spinner\"></div>\n        </div>\n      ) : (\n        // Render your actual content here after the timeout\n        <div>\n          <h1>Welcome to My App!</h1>\n          {/* Add the rest of your content */}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default LoadingScreen;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMO,OAAO,GAAGC,UAAU,CAAC,MAAM;MAC/BF,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,EAAE,IAAI,CAAC;;IAER;IACA,OAAO,MAAMG,YAAY,CAACF,OAAO,CAAC;EACpC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAQ,QAAA,EACGL,OAAO,gBACNH,OAAA;MAAKS,SAAS,EAAC,gFAAgF;MAAAD,QAAA,eAC7FR,OAAA;QAAKS,SAAS,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC;IAAA;IAEN;IACAb,OAAA;MAAAQ,QAAA,eACER,OAAA;QAAAQ,QAAA,EAAI;MAAkB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAExB;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACX,EAAA,CA3BID,aAAa;AAAAa,EAAA,GAAbb,aAAa;AA6BnB,eAAeA,aAAa;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}