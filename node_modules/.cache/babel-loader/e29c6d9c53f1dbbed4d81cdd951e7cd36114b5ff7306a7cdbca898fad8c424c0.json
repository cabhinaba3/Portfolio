{"ast":null,"code":"var _jsxFileName = \"/Users/cohithereweer/Desktop/portfolio-1/src/components/LoadingScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\ni;\nimport './styles/loadingscreen.css'; // Import your custom CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoadingScreen = props => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setLoading(false);\n    }, props.period);\n\n    // Clear the timeout if the component is unmounted\n    return () => clearTimeout(timeout);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kickass-loading-screen d-flex align-items-center justify-content-center vh-100\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-grow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(LoadingScreen, \"J7PPXooW06IQ11rfabbvgk72KFw=\");\n_c = LoadingScreen;\nexport default LoadingScreen;\nvar _c;\n$RefreshReg$(_c, \"LoadingScreen\");","map":{"version":3,"names":["React","useState","useEffect","i","jsxDEV","_jsxDEV","Fragment","_Fragment","LoadingScreen","props","_s","loading","setLoading","timeout","setTimeout","period","clearTimeout","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/cohithereweer/Desktop/portfolio-1/src/components/LoadingScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\ni\nimport './styles/loadingscreen.css'; // Import your custom CSS file\n\nconst LoadingScreen = (props) => {\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setLoading(false);\n    }, props.period);\n\n    // Clear the timeout if the component is unmounted\n    return () => clearTimeout(timeout);\n  }, []);\n\n  return (\n    <div>\n      {loading ? (\n        <div className=\"kickass-loading-screen d-flex align-items-center justify-content-center vh-100\">\n          <div className=\"spinner-grow\"></div>\n        </div>\n      ) : <></>}\n    </div>\n  );\n};\n\nexport default LoadingScreen;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClDC,CAAC;AACD,OAAO,4BAA4B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAErC,MAAMC,aAAa,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC/B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMW,OAAO,GAAGC,UAAU,CAAC,MAAM;MAC/BF,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,EAAEH,KAAK,CAACM,MAAM,CAAC;;IAEhB;IACA,OAAO,MAAMC,YAAY,CAACH,OAAO,CAAC;EACpC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA;IAAAY,QAAA,EACGN,OAAO,gBACNN,OAAA;MAAKa,SAAS,EAAC,gFAAgF;MAAAD,QAAA,eAC7FZ,OAAA;QAAKa,SAAS,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,gBACJjB,OAAA,CAAAE,SAAA,mBAAI;EAAC;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACZ,EAAA,CArBIF,aAAa;AAAAe,EAAA,GAAbf,aAAa;AAuBnB,eAAeA,aAAa;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}